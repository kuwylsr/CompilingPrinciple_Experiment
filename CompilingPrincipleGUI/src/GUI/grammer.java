package GUI;

public class grammer {

	public static String[][] WF_INIT = { { "P", "PROGRAM", "ID", "D", ";", "S", "#" }, // 0
			{ "D", "D", ";", "D", "#" }, // 1
			{ "D", "List", ":", "T", "#" }, // 2
			{ "D", "PROCEDURE", "ID", "D", ";", "S", "#" }, // 3
			{ "List", "List", ",", "ID", "#" }, // 4
			{ "List", "ID", "#" }, // 5
			{ "T", "INTEGER", "#" }, // 6
			{ "T", "REAL", "#" }, // 7
			{ "T", "ARRAY", "C", "OF", "T", "#" }, // 8
			{ "T", "RECORD", "D", "#" }, // 9

			{ "D", "ID", ":", "T", "#" }, // 10

			{ "T", "RECORD", "D", "END", "#" }, // 11

			{ "S", "Left", ":=", "E", "#" }, // 12
			{ "E", "E", "+", "E", "#" }, // 13
			{ "E", "E", "*", "E", "#" }, // 14
			{ "E", "-", "E", "#" }, // 15
			{ "E", "(", "E", ")", "#" }, // 16
			{ "E", "Left", "#" }, // 17
			{ "E", "INT", "#" }, // 18
			{ "E", "REALL", "#" }, // 19
			{ "E", "STRING", "#" }, // 20
			{ "Left", "Elist", "]", "#" }, // 21
			{ "Left", "ID", "#" }, // 22

			{ "Elist", "Elist", ",", "E", "#" }, // 23
			{ "Elist", "ID", "[", "E", "#" }, // 24

			{ "S", "CALL", "ID", "(", "Elist", ")", "#" }, // 25
			{ "Elist", "Elist", ",", "E", "#" }, // 26
			{ "Elist", "E", "#" }, // 27
			{ "S", "RETURN", "E", "#" }, // 28

			{ "B", "B", "OR", "B", "#" }, // 29
			{ "B", "B", "AND", "B", "#" }, // 30
			{ "B", "NOT", "B", "#" }, // 31
			{ "B", "(", "B", ")", "#" }, // 32
			{ "B", "E", ">", "E", "#" }, // 33
			{ "B", "E", "<", "E", "#" }, // 34
			{ "B", "E", ">=", "E", "#" }, // 35
			{ "B", "E", "<=", "E", "#" }, // 36
			{ "B", "E", "<>", "E", "#" }, // 37
			{ "B", "E", "=", "E", "#" }, // 38
			{ "B", "TRUE", "#" }, // 39
			{ "B", "FALSE", "#" }, // 40

			{ "S", "IF", "B", "THEN", "S", "#" }, // 41
			{ "S", "IF", "B", "THEN", "S", "ELSE", "S", "#" }, // 42
			{ "S", "WHILE", "B", "DO", "S", "#" }, // 43

			{ "L", "L", ";", "S", "#" }, // 44
			{ "L", "S", "#" }, // 45

			{ "S", "READ", "(", "List", ")", "#" }, // 46
			{ "S", "READLN", "(", "List", ")", "#" }, // 47
			{ "S", "WRITE", "(", "Elist", ")", "#" }, // 48
			{ "S", "WRITELN", "(", "Elist", ")", "#" }, // 49

			{ "S", "FOR", "ID", ":=", "E", "TO", "E", "STEP", "E", "DO", "S", "#" }, // 50

			{ "S", "REPEAT", "S", "UNTIL", "B", "#" }, // 51
			{ "S", "BEGIN", "L", "END", "#" }, // 52
			{ "C", "[", "INT", "]", "#" },// 53
	};// ����ԭʼ�ķ�
}
